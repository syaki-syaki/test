//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.example.sasakitest.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.sasakitest.graphql.UpdateIssueMutation
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object UpdateIssueMutation_ResponseAdapter {
  public object Data : Adapter<UpdateIssueMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("updateIssue")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        UpdateIssueMutation.Data {
      var _updateIssue: UpdateIssueMutation.UpdateIssue? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _updateIssue = UpdateIssue.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return UpdateIssueMutation.Data(
        updateIssue = _updateIssue
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: UpdateIssueMutation.Data,
    ): Unit {
      writer.name("updateIssue")
      UpdateIssue.obj().nullable().toJson(writer, customScalarAdapters, value.updateIssue)
    }
  }

  public object UpdateIssue : Adapter<UpdateIssueMutation.UpdateIssue> {
    public val RESPONSE_NAMES: List<String> = listOf("issue")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        UpdateIssueMutation.UpdateIssue {
      var _issue: UpdateIssueMutation.Issue? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _issue = Issue.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return UpdateIssueMutation.UpdateIssue(
        issue = _issue
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: UpdateIssueMutation.UpdateIssue,
    ): Unit {
      writer.name("issue")
      Issue.obj().nullable().toJson(writer, customScalarAdapters, value.issue)
    }
  }

  public object Issue : Adapter<UpdateIssueMutation.Issue> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "title", "body")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        UpdateIssueMutation.Issue {
      var _id: String? = null
      var _title: String? = null
      var _body: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _body = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return UpdateIssueMutation.Issue(
        id = _id!!,
        title = _title!!,
        body = _body!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: UpdateIssueMutation.Issue,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("body")
      StringAdapter.toJson(writer, customScalarAdapters, value.body)
    }
  }
}
