//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.example.sasakitest.graphql.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.example.sasakitest.graphql.type.GraphQLID
import com.example.sasakitest.graphql.type.GraphQLString
import com.example.sasakitest.graphql.type.Repository
import com.example.sasakitest.graphql.type.RepositoryConnection
import com.example.sasakitest.graphql.type.RepositoryOwner
import com.example.sasakitest.graphql.type.URI
import com.example.sasakitest.graphql.type.User
import kotlin.collections.List

public object GetRepositoriesQuerySelections {
  private val __owner: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "login",
          type = GraphQLString.type.notNull()
        ).build()
      )

  private val __nodes: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "name",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "url",
          type = URI.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "description",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "owner",
          type = RepositoryOwner.type.notNull()
        ).selections(__owner)
        .build()
      )

  private val __repositories: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "nodes",
          type = Repository.type.list()
        ).selections(__nodes)
        .build()
      )

  private val __user: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "repositories",
          type = RepositoryConnection.type.notNull()
        ).arguments(listOf(
          CompiledArgument.Builder("first", 10).build()
        ))
        .selections(__repositories)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "user",
          type = User.type
        ).arguments(listOf(
          CompiledArgument.Builder("login", CompiledVariable("username")).build()
        ))
        .selections(__user)
        .build()
      )
}
