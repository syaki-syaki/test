//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.example.sasakitest.graphql

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Mutation
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.sasakitest.graphql.adapter.UpdateIssueMutation_ResponseAdapter
import com.example.sasakitest.graphql.adapter.UpdateIssueMutation_VariablesAdapter
import com.example.sasakitest.graphql.selections.UpdateIssueMutationSelections
import kotlin.String
import kotlin.Unit

public data class UpdateIssueMutation(
  public val id: String,
  public val title: String,
  public val body: Optional<String?> = Optional.Absent,
) : Mutation<UpdateIssueMutation.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    UpdateIssueMutation_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = UpdateIssueMutation_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.sasakitest.graphql.type.Mutation.type
  )
  .selections(selections = UpdateIssueMutationSelections.__root)
  .build()

  @ApolloAdaptableWith(UpdateIssueMutation_ResponseAdapter.Data::class)
  public data class Data(
    /**
     * Updates an Issue.
     */
    public val updateIssue: UpdateIssue?,
  ) : Mutation.Data

  public data class UpdateIssue(
    /**
     * The issue.
     */
    public val issue: Issue?,
  )

  public data class Issue(
    /**
     * The Node ID of the Issue object
     */
    public val id: String,
    /**
     * Identifies the issue title.
     */
    public val title: String,
    /**
     * Identifies the body of the issue.
     */
    public val body: String,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "0b99a415bbeaea9017be0f8a97a6ff0d5d44581c346615a05cdcb715d81df68e"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * mutation UpdateIssue($id: ID!, $title: String!, $body: String) {
     *   updateIssue(input: {
     *     id: $id
     *     title: $title
     *     body: $body
     *   }
     *   ) {
     *     issue {
     *       id
     *       title
     *       body
     *     }
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "mutation UpdateIssue(${'$'}id: ID!, ${'$'}title: String!, ${'$'}body: String) { updateIssue(input: { id: ${'$'}id title: ${'$'}title body: ${'$'}body } ) { issue { id title body } } }"

    public const val OPERATION_NAME: String = "UpdateIssue"
  }
}
