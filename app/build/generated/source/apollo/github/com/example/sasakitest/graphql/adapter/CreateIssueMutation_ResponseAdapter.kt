//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.example.sasakitest.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.sasakitest.graphql.CreateIssueMutation
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object CreateIssueMutation_ResponseAdapter {
  public object Data : Adapter<CreateIssueMutation.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("createIssue")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CreateIssueMutation.Data {
      var _createIssue: CreateIssueMutation.CreateIssue? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _createIssue = CreateIssue.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CreateIssueMutation.Data(
        createIssue = _createIssue
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CreateIssueMutation.Data,
    ): Unit {
      writer.name("createIssue")
      CreateIssue.obj().nullable().toJson(writer, customScalarAdapters, value.createIssue)
    }
  }

  public object CreateIssue : Adapter<CreateIssueMutation.CreateIssue> {
    public val RESPONSE_NAMES: List<String> = listOf("issue")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CreateIssueMutation.CreateIssue {
      var _issue: CreateIssueMutation.Issue? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _issue = Issue.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CreateIssueMutation.CreateIssue(
        issue = _issue
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CreateIssueMutation.CreateIssue,
    ): Unit {
      writer.name("issue")
      Issue.obj().nullable().toJson(writer, customScalarAdapters, value.issue)
    }
  }

  public object Issue : Adapter<CreateIssueMutation.Issue> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "title", "body")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CreateIssueMutation.Issue {
      var _id: String? = null
      var _title: String? = null
      var _body: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _body = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CreateIssueMutation.Issue(
        id = _id!!,
        title = _title!!,
        body = _body!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CreateIssueMutation.Issue,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("body")
      StringAdapter.toJson(writer, customScalarAdapters, value.body)
    }
  }
}
