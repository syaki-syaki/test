//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.example.sasakitest.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.example.sasakitest.graphql.GetIssuesQuery
import kotlin.IllegalStateException
import kotlin.Unit

public object GetIssuesQuery_VariablesAdapter : Adapter<GetIssuesQuery> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      GetIssuesQuery = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: GetIssuesQuery,
  ): Unit {
    writer.name("username")
    StringAdapter.toJson(writer, customScalarAdapters, value.username)
    writer.name("repositoryName")
    StringAdapter.toJson(writer, customScalarAdapters, value.repositoryName)
    if (value.first is Optional.Present) {
      writer.name("first")
      NullableIntAdapter.present().toJson(writer, customScalarAdapters, value.first)
    }
    if (value.after is Optional.Present) {
      writer.name("after")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.after)
    }
  }
}
